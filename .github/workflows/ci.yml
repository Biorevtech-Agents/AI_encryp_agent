name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential wget ta-lib
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy  # Install numpy first to avoid TA-Lib build issues
        pip install -r requirements.txt
        pip install pytest pytest-cov black flake8 mypy
    
    - name: Run linting
      run: |
        black --check src tests
        flake8 src tests
        mypy src tests
    
    - name: Run tests
      run: |
        pytest tests/unit --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  integration-test:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential wget ta-lib
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy  # Install numpy first to avoid TA-Lib build issues
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run integration tests
      run: |
        pytest tests/integration
      env:
        BINANCE_API_KEY: Vz5j8IJK0pS9GK00IyzkdGlIWoXCKVJlDSefSEmkCaMv5CfRTeQ0wgmfgwtPKqlT
        BINANCE_API_SECRET: U3jBQ42dlDcBRDeaz4dKmq9iY3jAruSv4keG3juIqzWhL9hDUOeSJAcQh9z60WPF
        NEWS_API_KEY: 1234567890

  build:
    needs: [test, integration-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential wget ta-lib
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy  # Install numpy first to avoid TA-Lib build issues
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/*.whl
        asset_name: ai_encryp_agent-${{ github.run_number }}-py3-none-any.whl
        asset_content_type: application/x-wheel+zip 